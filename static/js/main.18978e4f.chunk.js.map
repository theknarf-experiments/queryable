{"version":3,"sources":["queryable.jsx","App.js","index.js"],"names":["queryable","_ref","initialData","_ref$initialQuery","initialQuery","_useState","useState","_useState2","Object","slicedToArray","query","setQuery","_useState3","_useState4","data","setData","react_default","a","createElement","value","onChange","e","target","style","padding","minWidth","queryable_TableRenderer","TableRenderer","_ref2","optic","backendOptic","i","key","updateDataOptic","L","_","index","console","log","updatedData","getHeaders","map","datum","_ref3","concat","toString","exampleData","users","id","name","depth","user","owes","amount","tables","ReactDOM","render","Fragment","document","getElementById"],"mappings":"yJAIeA,EAAA,SAAAC,GAAwC,IAArCC,EAAqCD,EAArCC,YAAqCC,EAAAF,EAAxBG,oBAAwB,IAAAD,EAAX,KAAWA,EAAAE,EAC1BC,mBAASF,GADiBG,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAC9CK,EAD8CH,EAAA,GACvCI,EADuCJ,EAAA,GAAAK,EAE5BN,mBAASJ,GAFmBW,EAAAL,OAAAC,EAAA,EAAAD,CAAAI,EAAA,GAE9CE,EAF8CD,EAAA,GAExCE,EAFwCF,EAAA,GAItD,OAAOG,EAAAC,EAAAC,cAAA,WACNF,EAAAC,EAAAC,cAAA,SACCC,MAAOT,EACPU,SAAU,SAAAC,GAAC,OAAIV,EAASU,EAAEC,OAAOH,QACjCI,MAAO,CAAEC,QAAS,YAAaC,SAAU,UAE1CT,EAAAC,EAAAC,cAACQ,EAAD,CAAehB,MAAOA,EAAOI,KAAMA,EAAMC,QAASA,MAI9CY,EAAgB,SAAAC,GAA8B,IAA3BlB,EAA2BkB,EAA3BlB,MAAOI,EAAoBc,EAApBd,KAAMC,EAAca,EAAdb,QACrC,IACC,IAAMc,EAAQC,uBAAapB,GAKrBU,EAAW,SAACW,EAAGC,GACpB,OAAO,SAAAX,GACN,IAAMY,EAAkB,CACvBJ,EACAK,OAAO,SAACC,EAAGC,GAAJ,OAAcA,IAAUL,IAC/BG,OAAOF,IAERK,QAAQC,IAAIL,EAAiBF,EAAGC,GAChC,IAAMO,EAAcL,MAAMD,EAAiBZ,EAAEC,OAAOH,MAAOL,GAC3DC,EAAQwB,KAIV,OAAOvB,EAAAC,EAAAC,cAAA,aACNF,EAAAC,EAAAC,cAAA,aACCF,EAAAC,EAAAC,cAAA,UAlBiB,SAAAJ,GAAI,OACtBoB,UAAU,CAACA,QAAQ,EAAGL,GAAQK,QAASpB,GAkBrC0B,CAAW1B,GAAM2B,IAAI,SAAAT,GAAG,OACxBhB,EAAAC,EAAAC,cAAA,MAAIc,IAAKA,GAAOA,OAIlBhB,EAAAC,EAAAC,cAAA,aACCgB,YAAY,SAACQ,EAAON,GAAR,MAAmB,CAAEM,QAAON,UAAUP,EAAOf,GAAM2B,IAAI,SAAAE,GAAA,IAAED,EAAFC,EAAED,MAAON,EAATO,EAASP,MAAT,OACnEpB,EAAAC,EAAAC,cAAA,MAAIc,IAAG,SAAAY,OAAWR,IACjBF,UAAU,CAACA,QAASQ,GAAOD,IAAI,SAAAT,GAAG,OAClChB,EAAAC,EAAAC,cAAA,MAAIc,IAAKA,GACRhB,EAAAC,EAAAC,cAAA,SACCC,MAAQuB,EAAMV,GACdZ,SAAUA,EAASgB,EAAOJ,aAS9B,MAAMX,GACP,OAAOL,EAAAC,EAAAC,cAAA,WAAOG,EAAEwB,cC5DZC,EAAc,CACnBC,MAAO,CACN,CAAEC,GAAI,EAAGC,KAAM,OACf,CAAED,GAAI,EAAGC,KAAM,OACf,CAAED,GAAI,EAAGC,KAAM,UAEhBC,MAAO,CACN,CAAEC,KAAM,EAAGC,KAAM,EAAGC,OAAQ,IAC5B,CAAEF,KAAM,EAAGC,KAAM,EAAGC,OAAQ,IAC5B,CAAEF,KAAM,EAAGC,KAAM,EAAGC,OAAQ,KAE7BC,OAAQ,CACP,CAAEL,KAAM,SACR,CAAEA,KAAM,WAIVZ,QAAQC,IAAI,cAAeQ,GChB3BS,IAASC,OACRxC,EAAAC,EAAAC,cDiBc,kBAAMF,EAAAC,EAAAC,cAAAF,EAAAC,EAAAwC,SAAA,KACpBzC,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAClB,EAAD,CACCE,YAAa4C,EACb1C,aAAa,2BCrBd,MACAsD,SAASC,eAAe","file":"static/js/main.18978e4f.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport * as L from 'partial.lenses';\nimport { backendOptic } from 'backend-simple-sql';\n\nexport default ({ initialData, initialQuery=null }) => {\n\tconst [ query, setQuery ] = useState(initialQuery);\n\tconst [ data, setData ] = useState(initialData);\n\n\treturn <div>\n\t\t<input\n\t\t\tvalue={query}\n\t\t\tonChange={e => setQuery(e.target.value)}\n\t\t\tstyle={{ padding: '1.1em 2em', minWidth: '20em' }}\n\t\t\t/>\t\n\t\t<TableRenderer query={query} data={data} setData={setData} />\n\t</div>;\n}\n\nconst TableRenderer = ({ query, data, setData }) => {\n\ttry {\n\t\tconst optic = backendOptic(query);\n\n\t\tconst getHeaders = data =>\n\t\t\tL.collect([L.limit(1, optic), L.keys], data);\n\n\t\tconst onChange = (i, key) => {\n\t\t\treturn e => {\n\t\t\t\tconst updateDataOptic = [\n\t\t\t\t\toptic,\n\t\t\t\t\tL.when((_, index) => index === i),\n\t\t\t\t\tL.prop(key)\n\t\t\t\t];\n\t\t\t\tconsole.log(updateDataOptic, i, key);\n\t\t\t\tconst updatedData = L.set(updateDataOptic, e.target.value, data);\n\t\t\t\tsetData(updatedData);\n\t\t\t};\n\t\t}\n\n\t\treturn <table>\n\t\t\t<thead>\n\t\t\t\t<tr>\n\t\t\t\t{getHeaders(data).map(key =>\n\t\t\t\t\t<th key={key}>{ key }</th>\n\t\t\t\t)}\n\t\t\t\t</tr>\n\t\t\t</thead>\n\t\t\t<tbody>\n\t\t\t{L.collectAs((datum, index) => ({ datum, index }), optic, data).map(({datum, index}) =>\n\t\t\t\t<tr key={`datum-${index}`}>\n\t\t\t\t{L.collect([L.keys], datum).map(key =>\n\t\t\t\t\t<td key={key}>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tvalue={ datum[key] }\n\t\t\t\t\t\t\tonChange={onChange(index, key)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t</td>\n\t\t\t\t)}\n\t\t\t\t</tr>\n\t\t\t)}\n\t\t\t</tbody>\n\t\t</table>;\n\n\t} catch(e) {\n\t\treturn <div>{ e.toString() }</div>;\n\t}\n}\n\n\n","import React from 'react';\nimport Queryable from './queryable';\n\nconst exampleData = {\n\tusers: [\n\t\t{ id: 1, name: 'Bob' },\n\t\t{ id: 2, name: 'Jen' },\n\t\t{ id: 3, name: 'Robin' },\n\t],\n\tdepth: [\n\t\t{ user: 1, owes: 2, amount: 10 /* dollars */ },\n\t\t{ user: 1, owes: 3, amount: 20 /* dollars */ },\n\t\t{ user: 2, owes: 3, amount: 15 /* dollars */ },\n\t],\n\ttables: [\n\t\t{ name: 'users' },\n\t\t{ name: 'depth' },\n\t]\n};\n\nconsole.log('exampleData', exampleData);\n\nexport default () => <>\n\t<h1> Queryable </h1>\n\t<Queryable\n\t\tinitialData={exampleData}\n\t\tinitialQuery='SELECT * FROM users;'\n\t\t/>\n</>;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n\t<App />,\n\tdocument.getElementById('root')\n);\n"],"sourceRoot":""}